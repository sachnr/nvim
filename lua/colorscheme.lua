local colors = {
	bg = "#1F1F28",
	fg = "#DDD8BB",
	fgb = "#BBB79E",
	blue = "#A2B5C1",
	dblue = "#7E97AB",
	green = "#A9B388",
	yellow = "#F4BF75",
	red = "#b46958",
}

local colors_alt = {
	bg_float = "#292934",
	grey = "#9797A5",
	diff_add_bg = "#4b4f3c",
	diff_text_bg = "#785e39",
	diff_change_bg = "#38444d",
	diff_delete_bg = "#8a5043",
}

local groups = {
	-- Default
	ColorColumn = { bg = colors_alt.bg_float },
	Conceal = { fg = colors.bg, bold = true },
	CurSearch = { fg = colors.fg, bg = colors.green, bold = true },
	Cursor = { fg = colors.bg, bg = colors.fg },
	lCursor = { link = "Cursor" },
	CursorIM = { link = "Cursor" },
	CursorColumn = { link = "CursorLine" },
	CursorLine = { bg = colors_alt.bg_float },
	Directory = { fg = colors.dblue },
	DiffAdd = { bg = colors_alt.diff_add_bg },
	DiffChange = { bg = colors_alt.diff_change_bg },
	DiffDelete = { fg = colors.bg, bg = colors_alt.diff_delete_bg },
	DiffText = { bg = colors_alt.diff_text_bg },
	ErrorMsg = { fg = colors.red },
	WinSeparator = { fg = colors_alt.bg_float, bg = "None" },
	VertSplit = { link = "WinSeparator" },
	Folded = { fg = colors.dblue, bg = colors.bg },
	FoldColumn = { fg = colors_alt.nontext, bg = colors_alt.bg_float },
	SignColumn = { fg = colors.green, bg = colors_alt.bg_float },
	IncSearch = { fg = colors.bg, bg = colors.green },
	Substitute = { fg = colors.fg, bg = colors_alt.diff_delete_bg },
	LineNr = { fg = colors_alt.nontext, bg = colors_alt.bg_float },
	CursorLineNr = { fg = colors.yellow, bg = colors_alt.bg_float, bold = true },
	MatchParen = { fg = colors.red, bold = true },
	ModeMsg = { fg = colors.yellow, bold = true },
	MsgArea = vim.o.cmdheight == 0 and { link = "StatusLine" } or { fg = colors_alt.grey },
	MsgSeparator = { bg = vim.o.cmdheight == 0 and colors.bg or colors_alt.bg2 },
	MoreMsg = { fg = colors.blue },
	NonText = { fg = colors_alt.grey },
	Normal = { fg = colors.fg, bg = colors.bg },
	NormalFloat = { fg = colors.fg, bg = colors_alt.bg_float },
	FloatBorder = { fg = colors_alt.bg_float, bg = colors_alt.bg_float },
	FloatTitle = { fg = colors.blue, bg = colors_alt.bg_float, bold = true },
	FloatFooter = { fg = colors_alt.nontext, bg = colors_alt.bg_float },
	NormalNC = { link = "Normal" },
	Pmenu = { fg = colors.fg, bg = colors_alt.bg_float },
	PmenuSel = { fg = colors.blue, bg = colors_alt.bg2 },
	PmenuSbar = { bg = colors_alt.bg_float },
	PmenuThumb = { bg = colors.fg },
	Question = { link = "MoreMsg" },
	QuickFixLine = { bg = colors_alt.bg_float },
	Search = { fg = colors.fg, bg = colors.green },
	SpecialKey = { fg = colors.blue },
	SpellBad = { undercurl = true, sp = colors.red },
	SpellCap = { undercurl = true, sp = colors.yellow },
	SpellLocal = { undercurl = true, sp = colors.yellow },
	SpellRare = { undercurl = true, sp = colors.yellow },
	StatusLine = { fg = colors.fg, bg = colors_alt.bg_float },
	StatusLineNC = { fg = colors_alt.grey, bg = colors_alt.bg_float },
	TabLine = { fg = colors_alt.grey, bg = colors_alt.bg_float },
	TabLineFill = { bg = colors.bg },
	TabLineSel = { fg = colors.fg, bg = colors_alt.bg_float, bold = true },
	Title = { fg = colors.blue, bold = true },
	Visual = { bg = colors_alt.bg_float },
	VisualNOS = { link = "Visual" },
	WarningMsg = { fg = colors.yellow },
	Whitespace = { fg = colors_alt.grey },
	WildMenu = { link = "Pmenu" },
	Winbar = { fg = colors.fg, bg = "NONE" },
	WinbarNC = { fg = colors_alt.grey, bg = "NONE" },
	debugPC = { bg = colors_alt.diff_delete_bg },
	debugBreakpoint = { fg = colors.red, bg = colors_alt.bg_float },

	-- treesitter
	["@annotation"] = { fg = colors.fg },
	["@attribute"] = { fg = colors.fg },
	["@boolean"] = { fg = colors.red },
	["@character"] = { fg = colors.green },
	["@conditional"] = { fg = colors.fg },
	["@constant"] = { fg = colors.fg },
	["@constant.builtin"] = { fg = colors.fg },
	["@constant.macro"] = { fg = colors.fg },
	["@constructor"] = { fg = colors.fg },
	["@error"] = { fg = colors.red },
	["@exception"] = { fg = colors.red },
	["@field"] = { fg = colors.fg },
	["@float"] = { fg = colors.fg },
	["@function"] = { fg = colors.fg },
	["@function.builtin"] = { fg = colors.fg },
	["@function.macro"] = { fg = colors.fg },
	["@include"] = { fg = colors.fg },
	["@keyword"] = { fg = colors.fg, bold = true },
	["@keyword.function"] = { fg = colors.fg },
	["@keyword.operator"] = { fg = colors.fg, bold = true },
	["@label"] = { fg = colors.fg },
	["@method"] = { fg = colors.fg },
	["@namespace"] = { fg = colors.fg },
	["@number"] = { fg = colors.red },
	["@operator"] = { fg = colors_alt.fg },
	["@parameter"] = { fg = colors.fg },
	["@parameter.reference"] = { fg = colors.fg },
	["@property"] = { fg = colors.fg },
	["@punctuation.bracket"] = { fg = colors.fg },
	["@punctuation.delimiter"] = { fg = colors.fg },
	["@punctuation.special"] = { fg = colors.dblue },
	["@repeat"] = { fg = colors.blue },
	["@string"] = { fg = colors.green },
	["@string.escape"] = { fg = colors.green },
	["@string.regex"] = { fg = colors.green },
	["@structure"] = { fg = colors.fg },
	["@symbol"] = { fg = colors.fg },
	["@tag"] = { fg = colors.fg },
	["@tag.attribute"] = { fg = colors.fg },
	["@tag.delimiter"] = { fg = colors.fg },
	["@text"] = { fg = colors.fg },
	["@text.emphasis"] = { fg = colors.fg, italic = true },
	["@text.literal"] = { fg = colors.fg },
	["@text.reference"] = { fg = colors.fg, bold = true },
	["@text.strong"] = { fg = colors.fg, bold = true },
	["@text.title"] = { fg = colors.dblue, bold = true },
	["@text.underline"] = { fg = colors.fg },
	["@text.uri"] = { fg = colors.fg, italic = true },
	["@type"] = { fg = colors.dblue },
	["@type.builtin"] = { fg = colors.dblue, italic = true },
	["@type.qualifier"] = { fg = colors.dblue },
	["@variable"] = { fg = colors.fgb },
	["@variable.builtin"] = { fg = colors.fgb },

	-- Semantic tokens.
	["@class"] = { fg = colors.blue },
	["@decorator"] = { fg = colors.fg },
	["@enum"] = { fg = colors.blue },
	["@enumMember"] = { fg = colors.fg },
	["@event"] = { fg = colors.fg },
	["@interface"] = { fg = colors.fg },
	["@lsp.type.class"] = { fg = colors.blue },
	["@lsp.type.decorator"] = { fg = colors.fg },
	["@lsp.type.enum"] = { fg = colors.fg },
	["@lsp.type.enumMember"] = { fg = colors.fg },
	["@lsp.type.function"] = { fg = colors.fg },
	["@lsp.type.interface"] = { fg = colors.fg },
	["@lsp.type.macro"] = { fg = colors.fg },
	["@lsp.type.method"] = { fg = colors.fg },
	["@lsp.type.namespace"] = { fg = colors.blue, bold = true },
	["@lsp.type.parameter"] = { fg = colors.fg },
	["@lsp.type.property"] = { fg = colors.fg },
	["@lsp.type.struct"] = { fg = colors.fg },
	["@lsp.type.type"] = { fg = colors.fg },
	["@lsp.type.variable"] = { fg = colors.fg },
	["@modifier"] = { fg = colors.fg },
	["@regexp"] = { fg = colors.fg },
	["@struct"] = { fg = colors.fg },
	["@typeParameter"] = { fg = colors.fg },

	-- Completions.
	CmpItemAbbrDeprecated = { link = "DiagnosticDeprecated" },
	CmpItemAbbrMatch = { fg = colors.blue, bg = "NONE" },
	CmpItemMenu = { fg = colors.fg },
	CmpItemKind = { bg = "NONE" },
	CmpItemKindClass = { link = "@type" },
	CmpItemKindColor = { link = "DevIconCss" },
	CmpItemKindConstant = { link = "@constant" },
	CmpItemKindConstructor = { link = "@type" },
	CmpItemKindEnum = { link = "@field" },
	CmpItemKindEnumMember = { link = "@field" },
	CmpItemKindEvent = { link = "@constant" },
	CmpItemKindField = { link = "@field" },
	CmpItemKindFile = { link = "Directory" },
	CmpItemKindFolder = { link = "Directory" },
	CmpItemKindFunction = { link = "@function" },
	CmpItemKindInterface = { link = "@type" },
	CmpItemKindKeyword = { link = "@keyword" },
	CmpItemKindMethod = { link = "@method" },
	CmpItemKindModule = { link = "@namespace" },
	CmpItemKindOperator = { link = "@operator" },
	CmpItemKindProperty = { link = "@property" },
	CmpItemKindReference = { link = "@parameter.reference" },
	CmpItemKindSnippet = { link = "@text" },
	CmpItemKindStruct = { link = "@structure" },
	CmpItemKindText = { link = "@text" },
	CmpItemKindTypeParameter = { link = "@parameter" },
	CmpItemKindUnit = { link = "@field" },
	CmpItemKindValue = { link = "@field" },
	CmpItemKindVariable = { link = "@variable" },
	CmpDocumentation = { link = "NormalFloat" },
	CmpDocumentationBorder = { link = "FloatBorder" },
	CmpCompletion = { link = "Pmenu" },
	CmpCompletionSel = { fg = "NONE", bg = colors.blue },
	CmpCompletionBorder = { fg = colors_alt.grey, bg = colors.bg },
	CmpCompletionThumb = { link = "PmenuThumb" },
	CmpCompletionSbar = { link = "PmenuSbar" },
	CmpItemAbbr = { fg = colors.fg },
	CmpItemAbbrMatchFuzzy = { link = "CmpItemAbbrMatch" },
	CmpItemKindDefault = { fg = colors_alt.grey },

	-- Gitsigns
	GitSignsAdd = { fg = colors.green, bg = colors_alt.bg_float },
	GitSignsChange = { fg = colors.yellow, bg = colors_alt.bg_float },
	GitSignsDelete = { fg = colors.red, bg = colors_alt.bg_float },

	-- Telescope
	TelescopeBorder = { fg = colors_alt.grey, bg = colors.bg },
	TelescopeTitle = { fg = colors.blue },
	TelescopeSelection = { link = "CursorLine" },
	TelescopeSelectionCaret = { link = "CursorLineNr" },
	TelescopeResultsClass = { link = "Structure" },
	TelescopeResultsStruct = { link = "Structure" },
	TelescopeResultsField = { link = "@field" },
	TelescopeResultsMethod = { link = "Function" },
	TelescopeResultsVariable = { link = "@variable" },

	-- Lazy
	LazyProgressTodo = { fg = colors_alt.nontext },
}

vim.cmd.highlight("clear")
for highlight, value in pairs(groups) do
	vim.api.nvim_set_hl(0, highlight, value)
end
